---
layout: post
---
### plugin management

#### vim 8 has its own plugin management function, so you do not need vundle any more.
 * plugin path: ~/.vim/pack/foobar/{opt,start}
    1. path [foobar] can be any name;
    2. opt:  the plugin in opt path will load when manually(ex. run command : packadd xxxx);
    3. start: the plugin in start path will load automaticly.<br>
 * example:<br>
 &nbsp;download files:
 ```shell
 curl -L https://github.com/kien/ctrlp.vim/archive/1.79.tar.gz \
 | tar zx -C ~/.vim/pack/foobar/opt
 ```
 add tags in vim commandline
 ```shell
 :helptags ~/.vim/pack/foobar/opt/ctrlp.vim-1.79/doc
 ```
 when you want to use this ctrlp, run command in vim:
 ```shell
 :packadd ctrlp.vim-1.79
 ```


### backup and undo
#### users can set up the backup and undo feature to avoid data loss in this four situations:
 1. Crash during editing beteween saves;
 2. The two open VIM instances edit the same file and overwrite each other's changes;
 3. Crash during saving, that is, crash when the target file has been emptied and the new content has not been completely written;
 4. New content has been saved, but I want to find the old content again.

#### settings
 * edit ~/.vimrc, add this settings to the file.
 ```shell
" Protect changes between writes. Default values of
" updatecount (200 keystrokes) and updatetime
" (4 seconds) are fine
set swapfile
set directory^=~/.vim/swap//
" protect against crash-during-write
set writebackup
" but do not persist backup after successful write
set nobackup
" use rename-and-write-new method whenever safe
set backupcopy=auto
" patch required to honor double slash at end
if has("patch-8.1.0251")
	" consolidate the writebackups -- not a big
	" deal either way, since they usually get deleted
	set backupdir^=~/.vim/backup//
end
" persist the undo tree for each file
set undofile
set undodir^=~/.vim/undo//
 ```
 * you must make the directory for backup files and undo files:
 ```shell
 mkdir ~/.vim/{swap,undodir,backup}
 ```
 * use the backup and undo function in the vim commandline
 ```shell
 :undolist # number and importance of changes
 :earlier # jump to the earlier version
 :later  # jump to the later version
 ```
